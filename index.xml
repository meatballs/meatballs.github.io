<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Owen Campbell</title><link>https://owencampbell.me.uk/</link><description>Recent content on Owen Campbell</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 22 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://owencampbell.me.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>Memorable Talks</title><link>https://owencampbell.me.uk/blogs/memorable_talks/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/memorable_talks/</guid><description>In Successful Talk Proposals, I finished by suggesting that a track record of memorable talks goes a long way to any future proposal being successful.
But what makes a memorable talk?
For some years, I&amp;rsquo;ve been quietly asking attendees at PyCon UK what talks they remember from previous years and what makes those stand out. I&amp;rsquo;ve noticed some common themes in their responses&amp;hellip;
Stories, Metaphors and Hidden Worlds Unsurprisingly, perhaps, the things that make a proposal stand out also do the same for the resulting talk.</description></item><item><title>Successful Talk Proposals</title><link>https://owencampbell.me.uk/blogs/successful_talk_proposals/</link><pubDate>Tue, 20 Sep 2022 09:50:01 +0100</pubDate><guid>https://owencampbell.me.uk/blogs/successful_talk_proposals/</guid><description>I&amp;rsquo;ve been part of the PyCon UK organisers team for several years. My job in that team is to look after the programme - the call for proposals, reviewing the submissions and fitting those we accept into the schedule.
There are many guides online to writing a successful proposal. We normally have one ourselves on the conference website:
Our 2022 Advice
Here&amp;rsquo;s another from Hannah Hazi whose 2022 proposal was selected as a keynote (which we&amp;rsquo;ll come back to again in a moment):</description></item><item><title>Everyone Pays to Attend PyCon UK</title><link>https://owencampbell.me.uk/blogs/pyconuk_everyone_pays/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/pyconuk_everyone_pays/</guid><description>PyCon UK has a long-standing policy that everyone pays to attend - speakers, organisers, everyone. That often causes some consterntation with reactions like &amp;quot;I have to pay to speak at PyCon UK?!!&amp;quot; or &amp;quot;If I volunteer to help, I have to pay the same as someone who has done nothing?&amp;quot;
I've been party to many discussions on whether the policy should change and these are my thoughts on the subject... (TLDR: it shouldn't).</description></item><item><title>Lightning Talks and Buckets</title><link>https://owencampbell.me.uk/blogs/lightning_talks/</link><pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/lightning_talks/</guid><description>PyCon UK 2016 At PyCon UK 2016, I became annoyed.
I was fully part of the organising team for the first time and we had spent part of our opening morning's session introducing lightning talks: explaining how they were an ideal way for new speakers to begin their speaking career.
At the time, the system we used for lightning talks was the same as everyone else. We had a flipchart at reception and, if you wanted to give a talk, you wrote your name and a title on the flipchart, starting at the top.</description></item><item><title>My Conference Attendance Guidelines</title><link>https://owencampbell.me.uk/blogs/conference_guidelines/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/conference_guidelines/</guid><description>I regularly attend technical conferences in order to learn, make new contacts and generally participate in whatever community that conference represents.
Over the years, I have found that the best way to increase my chances of making new friends and contacts is to speak at the conference - people are far more likely to approach me to discuss my talk than for any other reason.
So, for me, attendance at a conference is a big deal.</description></item><item><title>Why I use LaTeX</title><link>https://owencampbell.me.uk/blogs/why_i_use_latex/</link><pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/why_i_use_latex/</guid><description>When I tell people that I don&amp;rsquo;t use Microsoft Word, they are generally somewhat taken aback and then assume that, because I own a Mac rather than a Windows PC, that I just use Apple&amp;rsquo;s Pages instead.
I don&amp;rsquo;t!
In fact, I don&amp;rsquo;t use any kind of conventional word processor. I also don&amp;rsquo;t use PowerPoint for presentations or Visio for diagrams. Instead, I use what&amp;rsquo;s known as a &amp;rsquo;typesetting system&amp;rsquo; called LaTeX.</description></item><item><title>Oracle Update Statements</title><link>https://owencampbell.me.uk/blogs/oracle_update/</link><pubDate>Thu, 08 Mar 2012 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/blogs/oracle_update/</guid><description>There are several methods in Oracle SQL to update records in one table based on the content of another table.
Here, I give some of those methods and some guidance on where they might be most appropriate.
The Basics Oracle uses a &amp;lsquo;correlated subquery&amp;rsquo; syntax which looks like this:
UPDATE target t SET t.column = s.column (SELECT FROM source s WHERE s.join_column = t.join_column) The bracketed subquery joins the source and target tables and the target table is updated with values from the source column.</description></item><item><title>PGP Signatures on Email</title><link>https://owencampbell.me.uk/pgp/</link><pubDate>Thu, 12 Jun 2008 00:00:00 +0000</pubDate><guid>https://owencampbell.me.uk/pgp/</guid><description>You&amp;rsquo;re probably here because you&amp;rsquo;ve received an email from me with an attachment called &amp;lsquo;signature.asc&amp;rsquo; or with lines at the top similar to:
-----BEGIN PGP SIGNED MESSAGE----- Hash: SHA512 and a section at the bottom which looks something like:
-----BEGIN PGP SIGNATURE----- Version: GnuPG v1.4.9 (MingW32) iEYEARECAAYFAkmr2UAACgkQmnCt8c1NQ98pcACdEpZpqJYifkH0NvE6krEjzA9T VoMAn1HIKzpRrnveSEizzQBLMANkh648 =acdx -----END PGP SIGNATURE----- The attachment, or these two blocks, form a digital signature for the message which can be used to verify that:</description></item></channel></rss>